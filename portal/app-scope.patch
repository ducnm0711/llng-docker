diff --git a/usr/share/perl5/Lemonldap/NG/Manager/Attributes.pm b/usr/share/perl5/Lemonldap/NG/Manager/Attributes.pm
index 0f87d00c4..0af0eb890 100644
--- a/usr/share/perl5/Lemonldap/NG/Manager/Attributes.pm
+++ b/usr/share/perl5/Lemonldap/NG/Manager/Attributes.pm
@@ -2697,6 +2697,9 @@ m[^(?:ldapi://[^/]*/?|\w[\w\-\.]*(?::\d{1,5})?|ldap(?:s|\+tls)?://\w[\w\-\.]*(?:
             'default' => 0,
             'type'    => 'bool'
         },
+        'oidcRPMetaDataOptionsAllowScopeApplications' => {
+            'type' => 'bool'
+        },
         'oidcRPMetaDataOptionsAuthMethod' => {
             'select' => [ {
                     'k' => '',
diff --git a/usr/share/perl5/Lemonldap/NG/Manager/Build/Attributes.pm b/usr/share/perl5/Lemonldap/NG/Manager/Build/Attributes.pm
index 4d639a205..417527456 100644
--- a/usr/share/perl5/Lemonldap/NG/Manager/Build/Attributes.pm
+++ b/usr/share/perl5/Lemonldap/NG/Manager/Build/Attributes.pm
@@ -5122,6 +5122,9 @@ m{^(?:ldapi://[^/]*/?|\w[\w\-\.]*(?::\d{1,5})?|ldap(?:s|\+tls)?://\w[\w\-\.]*(?:
             documentation =>
               '/userinfo endpoint requires authn using Bearer token',
         },
+        oidcRPMetaDataOptionsAllowScopeApplications => {
+            type          => 'bool',
+        }
     };
 }
 
diff --git a/usr/share/perl5/Lemonldap/NG/Portal/Issuer/OpenIDConnect.pm b/usr/share/perl5/Lemonldap/NG/Portal/Issuer/OpenIDConnect.pm
index f357afcbe..3d167eae2 100644
--- a/usr/share/perl5/Lemonldap/NG/Portal/Issuer/OpenIDConnect.pm
+++ b/usr/share/perl5/Lemonldap/NG/Portal/Issuer/OpenIDConnect.pm
@@ -800,6 +800,7 @@ sub run {
                             address        => 'yourAddress',
                             phone          => 'yourPhone',
                             offline_access => 'yourOffline',
+                            applications   => 'yourApps',
                         };
                         my @list;
                         foreach my $requested_scope ( split( /\s+/, $scope ) ) {
diff --git a/usr/share/perl5/Lemonldap/NG/Portal/Lib/OpenIDConnect.pm b/usr/share/perl5/Lemonldap/NG/Portal/Lib/OpenIDConnect.pm
index c5cd704e0..bd2395248 100644
--- a/usr/share/perl5/Lemonldap/NG/Portal/Lib/OpenIDConnect.pm
+++ b/usr/share/perl5/Lemonldap/NG/Portal/Lib/OpenIDConnect.pm
@@ -191,6 +191,9 @@ sub load_rp {
     # Handle scopes
     # this HAS to be a deep copy of the DEFAULT_SCOPES hashref!
     my $scope_values = { %{ DEFAULT_SCOPES() } };
+    if ( $config{options}->{oidcRPMetaDataOptionsAllowScopeApplications} ) {
+        $scope_values->{applications} = [];
+    }
 
     # Additional claims
     my $extraClaims = $config{extraClaims};
@@ -2134,10 +2137,34 @@ sub buildUserInfoResponseFromData {
         # Else, iterate through scopes to find allowed attributes
     }
     else {
+        my $basePath = $self->conf->{portal};
+        $basePath =~ s#/*$##;
+        $basePath .= $self->p->{staticPrefix} . '/common/apps/';
         foreach my $scope_value ( split( /\s/, $scope ) ) {
             next if ( $scope_value eq "openid" );
             $self->logger->debug(
                 "Get attributes linked to scope value $scope_value");
+            if ( $scope_value eq 'applications' ) {
+                if ( $self->rpScopes->{$rp}->{applications} ) {
+                    my @applist = map {
+                        my @apps = map {
+                            $_->{applogo} =
+                                $_->{applogo_icon}
+                              ? $_->{applogo}
+                              : $basePath . $_->{applogo};
+                            $_;
+                        } @{ $_->{applications} };
+                        $_->{applications}
+                    } @{ $self->p->menu->appslist($req) };
+                    $userinfo_response->{applications} =
+                      JSON::to_json( \@applist );
+                }
+                else {
+                    $self->userLogger->error(
+                        'Try to access to applications scopes without right');
+                }
+                next;
+            }
             my $list =
               $self->getAttributesListFromScopeValue( $rp, $scope_value );
             $self->logger->debug(
