diff --git a/usr/share/perl5/Lemonldap/NG/Portal/Issuer/OpenIDConnect.pm b/usr/share/perl5/Lemonldap/NG/Portal/Issuer/OpenIDConnect.pm
index 96aea3427..b1b862529 100644
--- a/usr/share/perl5/Lemonldap/NG/Portal/Issuer/OpenIDConnect.pm
+++ b/usr/share/perl5/Lemonldap/NG/Portal/Issuer/OpenIDConnect.pm
@@ -24,7 +24,7 @@ use Lemonldap::NG::Portal::Main::Constants qw(
 );
 use String::Random qw/random_string/;
 
-our $VERSION = '2.19.0';
+our $VERSION = '2.20.0';
 
 extends qw(
   Lemonldap::NG::Portal::Main::Issuer
@@ -1385,7 +1385,7 @@ sub token {
     $req->data->{dropCsp} = 1 if $self->conf->{oidcDropCspHeaders};
     $self->logger->debug("URL detected as an OpenID Connect TOKEN URL");
 
-    my $rp = $self->checkEndPointAuthenticationCredentials($req);
+    my ($rp) = $self->checkEndPointAuthenticationCredentials($req);
     return $self->invalidClientResponse($req) unless ($rp);
 
     my $grant_type = $req->param('grant_type') || '';
@@ -1826,7 +1826,8 @@ sub _handleAuthorizationCodeGrant {
 
         $self->logger->debug("Generated offline refresh token: $refresh_token");
 
-        $sid = $self->getSidFromSession( $rp, $refreshTokenSession );
+        $sid = $self->getSidFromSession( $rp,
+            { _session_id => $refreshTokenSession->id } );
     }
 
     # For online access, if configured
@@ -1837,6 +1838,7 @@ sub _handleAuthorizationCodeGrant {
                 redirect_uri    => $codeSession->data->{redirect_uri},
                 scope           => $scope,
                 client_id       => $client_id,
+                _session_uid    => $apacheSession->data->{_user},
                 user_session_id => $codeSession->data->{user_session_id},
                 grant_type      => "authorizationcode",
             },
@@ -1921,9 +1923,9 @@ sub _handleAuthorizationCodeGrant {
 }
 
 sub _handleRefreshTokenGrant {
-    my ( $self, $req, $rp ) = @_;
-    my $client_id = $self->rpOptions->{$rp}->{oidcRPMetaDataOptionsClientID};
-    my $refresh_token = $req->param('refresh_token');
+    my ( $self, $req, $rp, $refresh_token, $client_id ) = @_;
+    $client_id ||= $self->rpOptions->{$rp}->{oidcRPMetaDataOptionsClientID};
+    $refresh_token ||= $req->param('refresh_token');
 
     unless ($refresh_token) {
         $self->logger->error("Missing refresh_token parameter");
@@ -2204,12 +2206,13 @@ sub introspection {
     $req->data->{dropCsp} = 1 if $self->conf->{oidcDropCspHeaders};
     $self->logger->debug("URL detected as an OpenID Connect INTROSPECTION URL");
 
-    my $rp = $self->checkEndPointAuthenticationCredentials($req);
+    my ( $rp, $authMethod ) =
+      $self->checkEndPointAuthenticationCredentials($req);
     return $self->invalidClientResponse($req) unless ($rp);
 
-    if ( $self->rpOptions->{$rp}->{oidcRPMetaDataOptionsPublic} ) {
+    if ( !$authMethod or $authMethod eq 'none' ) {
         $self->logger->error(
-            "Public clients are not allowed to acces the introspection endpoint"
+"Unauthenticated clients are not allowed to access the introspection endpoint"
         );
         return $self->sendOIDCError( $req, 'unauthorized_client', 401 );
     }
diff --git a/usr/share/perl5/Lemonldap/NG/Portal/Lib/OpenIDConnect.pm b/usr/share/perl5/Lemonldap/NG/Portal/Lib/OpenIDConnect.pm
index 05d837eae..84d849565 100644
--- a/usr/share/perl5/Lemonldap/NG/Portal/Lib/OpenIDConnect.pm
+++ b/usr/share/perl5/Lemonldap/NG/Portal/Lib/OpenIDConnect.pm
@@ -28,7 +28,7 @@ use URI;
 use Lemonldap::NG::Portal::Main::Constants
   qw(PE_OK PE_REDIRECT PE_ERROR portalConsts);
 
-our $VERSION = '2.19.0';
+our $VERSION = '2.20.0';
 
 # PROPERTIES
 
@@ -1791,7 +1791,7 @@ sub checkEndPointAuthenticationCredentials {
             }
         }
     }
-    return $rp;
+    return ( $rp, $method );
 }
 
 # Get Client ID and Client Secret
