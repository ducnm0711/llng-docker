diff --git a/usr/share/perl5/Lemonldap/NG/Portal/Issuer/OpenIDConnect.pm b/usr/share/perl5/Lemonldap/NG/Portal/Issuer/OpenIDConnect.pm
index 05c2c3b..5dac886 100644
--- a/usr/share/perl5/Lemonldap/NG/Portal/Issuer/OpenIDConnect.pm
+++ b/usr/share/perl5/Lemonldap/NG/Portal/Issuer/OpenIDConnect.pm
@@ -507,6 +507,28 @@ sub run {
                 }
             }
 
+            if ( $self->rpOptions->{$rp}
+                ->{oidcRPMetaDataOptionsAuthnRequireState}
+                and not( $oidc_request->{'state'} ) )
+            {
+                return $self->returnRedirectError(
+                    $req,           $oidc_request->{'redirect_uri'},
+                    "server_error", "State required",
+                    undef,          undef, 1
+                );
+            }
+
+            if ( $self->rpOptions->{$rp}
+                ->{oidcRPMetaDataOptionsAuthnRequireNonce}
+                and not( $oidc_request->{'nonce'} ) )
+            {
+                return $self->returnRedirectError(
+                    $req,           $oidc_request->{'redirect_uri'},
+                    "server_error", "Nonce required",
+                    undef,          undef, 1
+                );
+            }
+
             my $spAuthnLevel =
               $self->rpOptions->{$rp}->{oidcRPMetaDataOptionsAuthnLevel} || 0;
 
@@ -2060,7 +2082,7 @@ sub userInfo {
     $req->data->{dropCsp} = 1 if $self->conf->{oidcDropCspHeaders};
     $self->logger->debug("URL detected as an OpenID Connect USERINFO URL");
 
-    my $access_token = $self->getEndPointAccessToken($req);
+    my ( $access_token, $authMethod ) = $self->getEndPointAccessToken($req);
 
     unless ($access_token) {
         $self->logger->error("Unable to get access_token");
@@ -2084,6 +2106,16 @@ sub userInfo {
     my $rp              = $accessTokenSession->data->{rp};
     my $user_session_id = $accessTokenSession->data->{user_session_id};
 
+    if ( $self->rpOptions->{$rp}
+        ->{oidcRPMetaDataOptionsUserinfoRequireHeaderToken}
+        and $authMethod ne 'header' )
+    {
+        $self->userLogger->error(
+            'Endpoint authentication without using header');
+        return $self->returnBearerError( 'invalid_request',
+            'Invalid request', 401 );
+    }
+
     # Make sure $rp has been lazy loaded
     if ( $accessTokenSession->data->{client_id} ) {
         $self->getRP( $accessTokenSession->data->{client_id} );
diff --git a/usr/share/perl5/Lemonldap/NG/Portal/Lib/OpenIDConnect.pm b/usr/share/perl5/Lemonldap/NG/Portal/Lib/OpenIDConnect.pm
index 0a9af02..ba8c26f 100644
--- a/usr/share/perl5/Lemonldap/NG/Portal/Lib/OpenIDConnect.pm
+++ b/usr/share/perl5/Lemonldap/NG/Portal/Lib/OpenIDConnect.pm
@@ -1938,18 +1938,20 @@ sub getEndPointAuthenticationCredentials {
 # @return access_token
 sub getEndPointAccessToken {
     my ( $self, $req ) = @_;
-    my $access_token;
+    my ( $access_token, $method );
 
     my $authorization = $req->authorization;
     if ( $authorization and $authorization =~ /^Bearer ([\w\-\.]+)/i ) {
         $self->logger->debug("Bearer access token");
         $access_token = $1;
+        $method       = 'header';
     }
     elsif ( $access_token = $req->param('access_token') ) {
         $self->logger->debug("GET/POST access token");
+        $method = 'param';
     }
 
-    return $access_token;
+    return wantarray ? ( $access_token, $method ) : $access_token;
 }
 
 # DEPRECATED, remove in 3.0, use getAttributeListFromScopeValue instead
